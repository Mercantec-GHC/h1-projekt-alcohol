@page "/register"
@using Blazor_Markedsplads.Models
@using Blazor_Markedsplads.Services
@* @rendermode InteractiveServer *@

@inject CustomerService CustomerService
@inject NavigationManager Navigation


<h3>User Registration</h3>

<EditForm Model="newCustomer" OnValidSubmit="HandleRegister" FormName="RegisterForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" class="form-control" @bind-Value="newCustomer.Name" placeholder="Enter your name" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="newCustomer.Email" placeholder="Enter your email" />
    </div>
    <div class="form-group">
        <label for="age">Age</label>
        <InputNumber id="age" class="form-control" @bind-Value="newCustomer.Age" placeholder="Enter your age" />
    </div>
    <div class="form-group">
        <label for="address">Address</label>
        <InputText id="address" class="form-control" @bind-Value="newCustomer.Address" placeholder="Enter your address" />
    </div>
    <div class="form-group">
        <label for="phone">Phone</label>
        <InputNumber id="phone" class="form-control" @bind-Value="newCustomer.Phone" placeholder="Enter your phone number" />
    </div>
    <div class="form-group form-check">
        <InputCheckbox id="isSeller" class="form-check-input" @bind-Value="newCustomer.IsSeller" />
        <label class="form-check-label" for="isSeller">Is Seller?</label>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="newCustomer.Password" placeholder="Enter a password" />
    </div>

     <button type="submit" form="RegisterForm" class="btn btn-primary"> Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-3">@message</div>
}

@code {
    private CustomerModel newCustomer = new();
    private string message = string.Empty;

    private async Task HandleRegister()
    {
        try
        {
           
            int createdId = await CustomerService.CreateCustomerAsync(newCustomer);

            message = $"Registration successful (ID = {createdId}). Redirecting to login…";
            await Task.Delay(1500);
            Navigation.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            message = $"Error: {ex.Message}";
        }
    }
}
