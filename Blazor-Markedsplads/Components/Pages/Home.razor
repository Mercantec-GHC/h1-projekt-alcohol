@page "/"
@rendermode InteractiveServer
@inject DBService DBService 

<div class="MainpageWrapper">
    <div class="Title_container">
        <div class="frontpage_lable">Welcome to Illigohol!</div>
    </div>

    <div class="About_container">
        <div class="AboutUs_lable">About Us</div>
        <div class="Text_container"> Welcome to our community - a place for genuine lovers of rare and one-of-a-kind
            spirits. This isn’t just a marketplace; it’s a vibrant gathering of people united by a shared passion for
            exceptional alcoholic beverages. Here, we don’t judge your lifestyle or your tastes. Instead, we give you
            the freedom to discover something new and connect with like-minded enthusiasts.
            Whether you’re browsing for a unique vintage, sampling a fellow collector’s prized bottle, or looking to
            share your own hidden gems, you’ve come to the right place. Become a seller and let others savor the fruits
            of your dedication. Or, if you have the skill and confidence to craft your own artisanal spirits, partner
            with us to launch your very own business.
            If you’re over 18, we warmly invite you to join us - let’s explore the taste of life together!</div>
    </div>

    <button @onclick="GetUsers">Get Users</button>
    <div class="Customer_Container">
        @foreach (var customer in customers)
        {
            <div class="Customer_Box">
                <div class="profile-circle"></div>
                <div class="Customer_details">
                    <li>@customer.Name</li>
                    <li>@customer.Email</li>
                    @*<li>@(new string('*', customer.Password.Length))</li>*@
                    <li>@customer.Age</li>
                    <li>@customer.Address</li>
                    <li>@customer.Phone</li>
                </div>
            </div>
        }
    </div>
</div>

<style>

.MainWrapper {
    display: flex;
    flex-direction: column; /* Stack elements vertically */
    align-items: center; /* Center everything horizontally */
    justify-content: center; /* Adjust vertical spacing */
    width: 100%;
    position: relative;
}

 .Title_container{
    display: flex; 
    justify-content: center;
    align-items: center;
    padding: 50px;
    border-radius: 50px; @*Makes border more circuler*@
    border: 1px solid black;
    background-color: antiquewhite;
    width: 650px;

    position: absolute;/* Positions the element relative to the viewport */
    top: 10%; /* Moves it halfway down the viewport */
    left: 57%; /* Moves it halfway across the viewport */
    transform: translateX(-50%);

    background-image: url('/png-clipart-beer-glasses-graphy-ale-beer-glass-photography-thumbnail.png'); /* Update with your actual image path */
    background-size: cover; /* Ensures the image fills the container */
    background-position: center; /* Centers the image */
    background-repeat: no-repeat; /* Prevents the image from repeating */
    
} 

.frontpage_lable{
    font-size: 180%;
    font-weight: bold;
}

.AboutUs_lable{
font-weight: bold;
}

.About_container{
     display: flex;
    flex-direction: column; /* Stack children vertically */
    justify-content: flex-start;
    align-items: center;
    padding: 50px;
    border-radius: 50px;
    border: 1px solid black;
    background-color: antiquewhite;
    width: 650px; /* Match Title Container */
    
    position: absolute; /* Keeps it in place */
    top: 30%; /* Adjust lower on the page */
    left: 57%;
    transform: translateX(-50%);
}

.Text_container {
    width: 90%; /* Avoid shrinking */
    padding: 20px;
    text-align: center;
    font-size: 120%;
    background-color: white;
    border-radius: 20px;
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
    line-height: 1.8; /* Controls the height of each line */
}
.Customer_Container {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}

    .Customer_Box {
        width: 250px;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
        background-color: white;
        transition: transform 0.3s ease-in-out;
    }

    .customer-box:hover {
        transform: scale(1.05);
        box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);
    }

    .profile-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: #3498db; /* Change color if needed */
        display: block;
        margin: 0 auto 10px;
    }
</style>


@*Ternary:*@
<p>@(isConnected ? "Connected to the database" : "Not connected to the database")</p>

@code {
    List<Customer> customers = new List<Customer>();

    public async Task GetUsers()// will not use in final program
    {
        string sql = "SELECT * FROM customer";// added string query, becouse  GetAllUsers method is declared to use a required string query parameter
        customers = await DBService.GetAllUsers(sql);
    }

    bool isConnected = false;
    protected override async Task OnInitializedAsync()
    {
        isConnected = await DBService.TestConnectionAsync();
    }

}
