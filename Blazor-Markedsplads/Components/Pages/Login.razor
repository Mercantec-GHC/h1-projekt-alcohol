@page "/login"
@using Blazor_Markedsplads.Models

@using Blazor_Markedsplads.Services


@rendermode InteractiveServer
@inject LoginService loginService
@inject SessionService SessionService
@inject NavigationManager Navigation


<h3>Customer Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.Email" placeholder="Enter your email" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" placeholder="Enter your password" />
    </div>

    <button type="submit" class="btn btn-primary" style="margin-top:18px;">Login</button>
   
</EditForm>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}


@code {
    private LoginModel loginModel = new();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;

        var customer = await loginService.ValidateLoginAsync(loginModel.Email, loginModel.Password);

        if (customer == null)
        {
            errorMessage = "Invalid email or password.";
            return;
        }

        SessionService.Login(customer);

        Navigation.NavigateTo("/");
    }
}